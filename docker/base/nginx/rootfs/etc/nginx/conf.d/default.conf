server {
    listen 8080;
    server_name _;
    root /srv/app/public;
    set_real_ip_from        "0.0.0.0/0";
    real_ip_recursive       on;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        set_by_lua $upstream_host 'return os.getenv("UPSTREAM") or "127.0.0.1:9000"';
        fastcgi_pass $upstream_host;
        resolver local=on;

        # Increase the buffer size to handle large cache invalidation headers
        fastcgi_buffer_size 32k;
        fastcgi_buffers 32 4k;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
        deny all;
    }

    # URL for health checks
    location /healthz {
        access_log off;
        default_type text/plain;
        return 200 "healthy\n";
    }

    # fpm monitor
    location ~ /fpm-(status|ping) {
        set_by_lua $upstream_host 'return os.getenv("UPSTREAM") or "127.0.0.1:9000"';
        fastcgi_pass $upstream_host;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }

    # nginx monitor
    location ~ /status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}
